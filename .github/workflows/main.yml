name: Java CI with Gradle

env:
  PROJECT_NAME: airDnsTest
  BUCKET_NAME: githubactionaws
  CODE_DEPLOY_APP: airDnS-test
  CODE_DEPLOY_DEPLOYMENT_GROUP: springbootwithgitaction
  
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2 # 만약 v1이라면 with의 distribution는 생략해도 된다.
      with:
        java-version: '17'
        distribution: 'zulu'

    # 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    # Build Gradle
    - name: Build with Gradle
      run: ./gradlew build

    # build한 후 프로젝트를 압축한다.
    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip .
      shell: bash
      
    # aws 인증서비스
    # github repository에서 Setting에서 사용할 암호화된 변수
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

    # Upload to S3 stroage
    - name: Upload to S3
      run: aws s3 cp $PROJECT_NAME.zip s3://$BUCKET_NAME/deploy/$PROJECT_NAME.zip --region ap-northeast-2

    # CodeDeploy에게 배포 명령을 내린다.
    - name: Code Deploy
     # run: aws deploy create-deployment--application-name $CODE_DEPLOY_APP --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
      run: 
       aws deploy create-deployment --application-name $CODE_DEPLOY_APP
       --deployment-config-name CodeDeployDefault.AllAtOnce
       --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP
       --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=deploy/$PROJECT_NAME.zip
